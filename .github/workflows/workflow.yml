name: Pull Request Check # 워크플로 이름

on: # 워크플로 실행 트리거
  pull_request: # pull_request 이벤트가 실행될 때
    types: [opened, synchronize] # opened 및 synchronize 이벤트에 대해 트리거

jobs: # 작업 정의
  check:
    runs-on: ubuntu-latest # 우분투 환경
    permissions: # 권한 설정
      pull-requests: write # PR에 쓰기 권한 설정
    steps: # 작업 단계
      - name: Check PR body # 작업 이름
        uses: actions/github-script@v7
        with:
          script: | # 스크립트 시작
            const pull_request = context.payload.pull_request; // pull request 객체 가져오기
            if (!pull_request) {
              console.log("This is not a pull request.");
              return; // 종료
            }

            const body = pull_request.body;

            const message = "아래 기입내용을 작성해주시고 해당 라인을 삭제해주세요"

            if (!body || body.includes(message)) {
              console.log("Pull Request body is empty. Adding a comment and closing the PR.");

              // PR에 코멘트 추가
              await github.rest.issues.createComment({
                owner: context.repo.owner, // 저장소 소유자
                repo: context.repo.repo, // 저장소 이름
                issue_number: pull_request.number, // PR 번호
                body: "해당 PR은 가이드라인을 준수하지 않았기 때문에 PR을 닫겠습니다.", // 코멘트 내용
              });

              // PR 닫기
              await github.rest.pulls.update({
                owner: context.repo.owner, // 저장소 소유자
                repo: context.repo.repo, // 저장소 이름
                pull_number: pull_request.number, // PR 번호
                state: "closed", // 상태를 닫힘으로 변경
              });
            } else {
              console.log("Pull Request body is valid.");
            }
